
import warnings
warnings.filterwarnings('ignore')


import pandas as pd
import numpy as np
from scipy.stats import skew, kurtosis
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression, LinearRegression
from sklearn.metrics import r2_score, accuracy_score


# Load dataset
df = pd.read_csv('./datasets/diabetes.csv')


df.head()


Univariate analysis: Frequency, Mean, Median, Mode, Variance, Standard Deviation,Skewness, and Kurtosis


df.mean()


df.median()


df.mode().iloc[0]


df.var()


df.std()


df.skew()


df.kurt()


Bivariate analysis: Linear and logistic regression modelling



# dependend and independent variable split
X = df.drop('Outcome',axis=1)
y = df['Outcome']


# Train test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=20)



linear_model = LinearRegression()
# model training
linear_model.fit(X_train,y_train)


# model testing
linear_pred = linear_model.predict(X_test)



# evaluation
accuracy = r2_score(y_test, linear_pred)
print(f"Accuracy : {accuracy}")


logistic_model = LogisticRegression()
# model training
logistic_model.fit(X_train, y_train)



logistic_pred = logistic_model.predict(X_test)


# model evaluation
accuracy = accuracy_score(y_test, logistic_pred)
print(f"Accuracy : {accuracy}")